// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.


// Generated by Quartus Prime Version 17.0 (Build Build 595 04/25/2017)
// Created on Sat Oct 24 18:29:21 2020

SPU SPU_inst
(
	.i_clk(i_clk) ,	// input  i_clk
	.n_rst(n_rst) ,	// input  n_rst
	.SPUCS(SPUCS) ,	// input  SPUCS
	.SRD(SRD) ,	// input  SRD
	.SWRO(SWRO) ,	// input  SWRO
	.addr(addr) ,	// input [9:0] addr
	.dataIn(dataIn) ,	// input [15:0] dataIn
	.dataOut(dataOut) ,	// output [15:0] dataOut
	.dataOutValid(dataOutValid) ,	// output  dataOutValid
	.SPUINT(SPUINT) ,	// output  SPUINT
	.SPUDREQ(SPUDREQ) ,	// output  SPUDREQ
	.SPUDACK(SPUDACK) ,	// input  SPUDACK
	.o_adrRAM(o_adrRAM) ,	// output [17:0] o_adrRAM
	.o_dataReadRAM(o_dataReadRAM) ,	// output  o_dataReadRAM
	.o_dataWriteRAM(o_dataWriteRAM) ,	// output  o_dataWriteRAM
	.i_dataInRAM(i_dataInRAM) ,	// input [15:0] i_dataInRAM
	.o_dataOutRAM(o_dataOutRAM) ,	// output [15:0] o_dataOutRAM
	.CDRomInL(CDRomInL) ,	// input [15:0] CDRomInL
	.CDRomInR(CDRomInR) ,	// input [15:0] CDRomInR
	.inputL(inputL) ,	// input  inputL
	.inputR(inputR) ,	// input  inputR
	.AOUTL(AOUTL) ,	// output [15:0] AOUTL
	.AOUTR(AOUTR) ,	// output [15:0] AOUTR
	.VALIDOUT(VALIDOUT) 	// output  VALIDOUT
);

defparam SPU_inst.CHANGE_ADSR_AT = 'b00000000000000000000001;
defparam SPU_inst.VOICEMD = 'b01;
defparam SPU_inst.FIFO_MD = 'b10;
defparam SPU_inst.REVB_MD = 'b11;
defparam SPU_inst.CDROMMD = 'b00;
defparam SPU_inst.VOICE_RD = 'b001;
defparam SPU_inst.FIFO_RD = 'b010;
defparam SPU_inst.REVERB_READ = 'b011;
defparam SPU_inst.NO_SPU_READ = 'b000;
defparam SPU_inst.VOICE_WR = 'b101;
defparam SPU_inst.FIFO_WRITE = 'b110;
defparam SPU_inst.REVERB_WRITE = 'b111;
defparam SPU_inst.CD_WR = 'b100;
defparam SPU_inst.ADSR_ATTACK = 'b00;
defparam SPU_inst.ADSR_DECAY = 'b01;
defparam SPU_inst.ADSR_SUSTAIN = 'b10;
defparam SPU_inst.ADSR_RELEASE = 'b11;
defparam SPU_inst.XFER_STOP = 'b00;
defparam SPU_inst.XFER_MANUAL = 'b01;
defparam SPU_inst.XFER_DMAWR = 'b10;
defparam SPU_inst.XFER_DMARD = 'b11;
defparam SPU_inst.SA_VWALL = 'b0000;
defparam SPU_inst.SA_VIIR = 'b0001;
defparam SPU_inst.SA_ZERO = 'b0010;
defparam SPU_inst.SA_ONE = 'b0011;
defparam SPU_inst.SA_COMB1 = 'b0100;
defparam SPU_inst.SA_COMB2 = 'b0101;
defparam SPU_inst.SA_COMB3 = 'b0110;
defparam SPU_inst.SA_COMB4 = 'b0111;
defparam SPU_inst.SA_VAPF1 = 'b1000;
defparam SPU_inst.SA_VAPF2 = 'b1001;
defparam SPU_inst.SA_NVAPF1 = 'b1010;
defparam SPU_inst.SA_NVAPF2 = 'b1011;
defparam SPU_inst.SA_NEG_ONE = 'b1100;
defparam SPU_inst.SA_VIN = 'b1101;
defparam SPU_inst.SB_DLSAME = 'b00000;
defparam SPU_inst.SB_DRSAME = 'b00001;
defparam SPU_inst.SB_MLSAME = 'b00010;
defparam SPU_inst.SB_MRSAME = 'b00011;
defparam SPU_inst.SB_DLDIFF = 'b00100;
defparam SPU_inst.SB_DRDIFF = 'b00101;
defparam SPU_inst.SB_MLDIFF = 'b00110;
defparam SPU_inst.SB_MRDIFF = 'b00111;
defparam SPU_inst.SB_MLCOMB1 = 'b01000;
defparam SPU_inst.SB_MRCOMB1 = 'b01001;
defparam SPU_inst.SB_MLCOMB2 = 'b01010;
defparam SPU_inst.SB_MRCOMB2 = 'b01011;
defparam SPU_inst.SB_MLCOMB3 = 'b01100;
defparam SPU_inst.SB_MRCOMB3 = 'b01101;
defparam SPU_inst.SB_MLCOMB4 = 'b01110;
defparam SPU_inst.SB_MRCOMB4 = 'b01111;
defparam SPU_inst.SB_MLAPF1_ADPF1 = 'b10000;
defparam SPU_inst.SB_MRAPF1_ADPF1 = 'b10001;
defparam SPU_inst.SB_MLAPF2_ADPF2 = 'b10010;
defparam SPU_inst.SB_MRAPF2_ADPF2 = 'b10011;
defparam SPU_inst.SB_MLAPF1 = 'b10100;
defparam SPU_inst.SB_MRAPF1 = 'b10101;
defparam SPU_inst.SB_MLAPF2 = 'b10110;
defparam SPU_inst.SB_MRAPF2 = 'b10111;
defparam SPU_inst.SB_FAKEREAD = 'b11000;
defparam SPU_inst.SB_DxSAME = 'b0000;
defparam SPU_inst.SB_MxSAME = 'b0001;
defparam SPU_inst.SB_DxDIFF = 'b0010;
defparam SPU_inst.SB_MxDIFF = 'b0011;
defparam SPU_inst.SB_MxCOMB1 = 'b0100;
defparam SPU_inst.SB_MxCOMB2 = 'b0101;
defparam SPU_inst.SB_MxCOMB3 = 'b0110;
defparam SPU_inst.SB_MxCOMB4 = 'b0111;
defparam SPU_inst.SB_MxAPF1_ADPF1 = 'b1000;
defparam SPU_inst.SB_MxAPF2_ADPF2 = 'b1001;
defparam SPU_inst.SB_MxAPF1 = 'b1010;
defparam SPU_inst.SB_MxAPF2 = 'b1011;
defparam SPU_inst.SEL_IN = 'b00;
defparam SPU_inst.SEL_RAM = 'b01;
defparam SPU_inst.SEL_ACC = 'b10;
